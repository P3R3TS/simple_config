Metadata-Version: 2.1
Name: simple-config
Version: 0.0.1
License: MIT License
        
        Copyright (c) 2022 Bogdan Zabortsev
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
License-File: LICENSE

Description
===========

The simple_config package is used to simplify working with configuration files.

To use the package, you must:
=============================

Adding a package to your project
```python
from simple_config import config
```

Creating configurating file
```python
path = "./your_config_path"
filename = "your_filename.ini"

# Default path = "./", filename = "config.ini"
config = config(path = path, filename = filename)
``` 

The "add" method creates a new section if it does not exist. And a new option if it doesn't exist. Otherwise, it overwrites this option 
```python
config.add(section = "your_section", option = "your_option", value = "your_value") 
```

The "get" method gets the desired option, if it exists. Otherwise, the error "simple_config.NotFound - Incorrect section/option" will be returned. Your_section/option is not found". The gettingtype argument can be ["str", "int", "float", "complex"]
```python
config.get(section = "your_section", option = "your_option", gettingtype = "str")
```

The "delete" method deletes the desired option, if it exists. If the option was the only one in the current section, the section is also deleted. Otherwise, the method leads to an error.
```python
config.delete(section = "your_section", option = "your_option")
```

The "fullpath" method returns the full path to the configuration file. "your_config_path/your_filename.ini"
```python
fullpath = config.fullpath()
```
